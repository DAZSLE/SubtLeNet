DEBUG = False            # fill your screen with debugging output 

truth = 'nPartons'       # obsolete kinda
n_truth = 4              # size of one-hot
n_btruth = 4              # size of one-hot

weights_scale = None     # honestly don't remember

limit = None             # whether to limit the number of input particles

smear_params = None

# decorrelation
n_decorr_bins = 15       # granularity of binning
max_mass = 300.          # maximum msd
max_rho = 7.5            # maximum rho
min_rho = -5.            # minimum rho
max_pt = 1000.           # maximum pT
min_pt = 450.            # minimum pT
adversary_mask = 1       # which category we should apply the decorrelation to, e.g. only on QCD(=1prong)

## reco singletons ## 
_singletons = ['msd','pt', 'rawpt', 'eta', 'phi',  'eventNumber',
               'partonM', 'partonPt', 'partonEta', 'nPartons',
               'nBPartons', 'nCPartons',
               'rho','rawrho','rho2','rawrho2',
               'tau32','tau32SD','tau21','tau21SD',
               'maxcsv','mincsv','doubleb', # uncomment in a bit
               'top_ecf_bdt']

singletons = {v:i for i,v in enumerate(_singletons)}

default_variables=['msd','rawpt','tau32SD','tau32', 'top_ecf_bdt', 'maxcsv', 'mincsv', 'doubleb'] 
default_mus      =[  150,    1000, 0.5,0.5, 0, 0.5, 0.5, 0.5]
default_sigmas   =[   50,    500, 0.5,0.5, 1, 0.5, 0.5, 0.5]

## gen singletons ## 
# autogenerated
_gen_singletons = [ 
               '1_1_1', '1_1_2', '1_2_1', '1_2_2', '1_3_1', '1_3_2', 
               '1_4_1', '1_4_2', '2_1_1', '2_1_2', '2_2_1', '2_2_2', 
               '2_3_1', '2_3_2', '2_4_1', '2_4_2', '3_1_1', '3_1_2', 
               '3_2_1', '3_2_2', '3_3_1', '3_3_2', '3_4_1', '3_4_2', 
               'eta', 'eventNumber', 'm', 'msd', 'nprongs', 'partonm', 
               'partonpt', 'phi', 'pt', 'tau1', 'tau1sd', 'tau2', 
               'tau2sd', 'tau3', 'tau3sd',
        ] 

_gen_props = {
    "2_3_1" : (0.000900,0.001247),
    "2_3_2" : (0.000260,0.000523),
    "2_4_2" : (0.000001,0.000006),
    "2_4_1" : (0.000009,0.000023),
    "2_1_2" : (1.000000,1.000000),
    "2_1_1" : (1.000000,1.000000),
    "2_2_1" : (0.065825,0.038151),
    "2_2_2" : (0.039773,0.030055),
    "1_2_2" : (0.039773,0.030055),
    "1_2_1" : (0.065825,0.038151),
    "pt" : (570.259277,99.722885),
    "tau2" : (0.112757,0.057523),
    "tau3" : (0.060297,0.028730),
    "tau1" : (0.265966,0.096302),
    "1_4_1" : (0.000065,0.000096),
    "1_3_1" : (0.002703,0.002839),
    "msd" : (149.535583,54.389210),
    "3_3_1" : (0.000611,0.001072),
    "tau1sd" : (0.254007,0.105487),
    "phi" : (3.140448,1.815403),
    "3_3_2" : (0.000186,0.000533),
    "3_2_1" : (0.065825,0.038151),
    "3_2_2" : (0.039773,0.030055),
    "1_3_2" : (0.001093,0.001470),
    "1_1_1" : (1.000000,1.000000),
    "3_1_2" : (1.000000,1.000000),
    "3_1_1" : (1.000000,1.000000),
    "1_1_2" : (1.000000,1.000000),
    "1_4_2" : (0.000013,0.000032),
    "tau3sd" : (0.051978,0.030201),
    "eta" : (0.004036,0.970170),
    "m" : (164.187057,42.812160),
    "tau2sd" : (0.100529,0.063567),
    "3_4_2" : (0.000000,1.000000),
    "3_4_1" : (0.000000,1.000000),
        }


gen_singletons = {v:i for i,v in enumerate(_gen_singletons)}

def set_gen_variables(l=_gen_singletons):
    global gen_default_variables, gen_default_mus, gen_default_sigmas
    gen_default_variables = l[:]
    for bad in ['eventNumber', 'nprongs', 'partonm', 'partonpt']:
        if bad in gen_default_variables:
            gen_default_variables.remove(bad)

    gen_default_mus = [_gen_props[x][0] for x in gen_default_variables]
    gen_default_sigmas = [_gen_props[x][1] for x in gen_default_variables]

set_gen_variables()
