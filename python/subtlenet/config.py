DEBUG = False            # fill your screen with debugging output 

truth = 'nPartons'       # obsolete kinda
n_truth = 4              # size of one-hot
n_btruth = 4              # size of one-hot

weights_scale = None     # honestly don't remember

limit = None             # whether to limit the number of input particles

smear_params = None

# decorrelation
n_decorr_bins = 15       # granularity of binning
max_mass = 300.          # maximum msd
max_rho = 7.5            # maximum rho
min_rho = -5.            # minimum rho
max_pt = 1000.           # maximum pT
min_pt = 450.            # minimum pT
adversary_mask = 1       # which category we should apply the decorrelation to, e.g. only on QCD(=1prong)

## reco singletons ## 
_singletons = ['msd','pt', 'rawpt', 'eta', 'phi',  'eventNumber',
               'partonM', 'partonPt', 'partonEta', 'nPartons',
               'nBPartons', 'nCPartons',
               'rho','rawrho','rho2','rawrho2',
               'tau32','tau32SD','tau21','tau21SD',
               'maxcsv','mincsv','doubleb', # uncomment in a bit
               'top_ecf_bdt']

singletons = {v:i for i,v in enumerate(_singletons)}

default_variables=['msd','rawpt','tau32SD','tau32', 'top_ecf_bdt', 'maxcsv', 'mincsv', 'doubleb'] 
default_mus      =[  150,    1000, 0.5,0.5, 0, 0.5, 0.5, 0.5]
default_sigmas   =[   50,    500, 0.5,0.5, 1, 0.5, 0.5, 0.5]

## gen singletons ## 
# autogenerated

_gen_singletons = [ 
    '1_1_1',
    '1_1_2',
    '1_2_1',
    '1_2_2',
    '1_3_1',
    '1_3_2',
    '1_4_1',
    '1_4_2',
    '2_1_1',
    '2_1_2',
    '2_2_1',
    '2_2_2',
    '2_3_1',
    '2_3_2',
    '2_4_1',
    '2_4_2',
    '3_1_1',
    '3_1_2',
    '3_2_1',
    '3_2_2',
    '3_3_1',
    '3_3_2',
    '3_4_1',
    '3_4_2',
    'eta',
    'eventNumber',
    'm',
    'msd',
    'nprongs',
    'partonm',
    'partonpt',
    'phi',
    'pt',
    'tau1',
    'tau1sd',
    'tau2',
    'tau2sd',
    'tau3',
    'tau3sd',
        ] 

_gen_props = {
    "2_3_1" : (0.000900,0.001247),
    "2_3_2" : (0.000260,0.000523),
    "2_4_2" : (0.000001,0.000006),
    "2_4_1" : (0.000009,0.000023),
    "2_1_2" : (1.000000,1.000000),
    "2_1_1" : (1.000000,1.000000),
    "2_2_1" : (0.065825,0.038151),
    "2_2_2" : (0.039773,0.030055),
    "1_2_2" : (0.039773,0.030055),
    "1_2_1" : (0.065825,0.038151),
    "pt" : (570.259277,99.722885),
    "tau2" : (0.112757,0.057523),
    "tau3" : (0.060297,0.028730),
    "tau1" : (0.265966,0.096302),
    "1_4_1" : (0.000065,0.000096),
    "1_3_1" : (0.002703,0.002839),
    "msd" : (149.535583,54.389210),
    "3_3_1" : (0.000611,0.001072),
    "tau1sd" : (0.254007,0.105487),
    "phi" : (3.140448,1.815403),
    "3_3_2" : (0.000186,0.000533),
    "3_2_1" : (0.065825,0.038151),
    "3_2_2" : (0.039773,0.030055),
    "1_3_2" : (0.001093,0.001470),
    "1_1_1" : (1.000000,1.000000),
    "3_1_2" : (1.000000,1.000000),
    "3_1_1" : (1.000000,1.000000),
    "1_1_2" : (1.000000,1.000000),
    "1_4_2" : (0.000013,0.000032),
    "tau3sd" : (0.051978,0.030201),
    "eta" : (0.004036,0.970170),
    "m" : (164.187057,42.812160),
    "tau2sd" : (0.100529,0.063567),
    "3_4_2" : (0.000000,1.000000),
    "3_4_1" : (0.000000,1.000000),
        }

'''

_gen_props = [
    (0.001537402070234247, 0.00034477154108082561),
    (0.001537402070234247, 0.00034477154108082561),
    (0.00017292134754726129, 0.00014082655717496704),
    (8.3007357831553478e-05, 9.9244888656540445e-05),
    (2.7430126823022905e-05, 2.3583308070903217e-05),
    (8.0070023502087572e-06, 1.0459320203232025e-05),
    (3.7431899428173526e-06, 3.3467491777948376e-06),
    (6.8358170877056476e-07, 8.499715191775805e-07),
    (2.4824725409328423e-06, 1.0836606395053521e-06),
    (2.4824725409328423e-06, 1.0836606395053521e-06),
    (2.8126705686528502e-07, 2.710629010866947e-07),
    (1.3647987131562986e-07, 1.8697351773963339e-07),
    (2.1629525612896421e-08, 3.061038817992018e-08),
    (4.9544073462892496e-09, 1.0558814762648199e-08),
    (1.89316122303677e-09, 2.7551481020530633e-09),
    (1.9807243867668616e-10, 4.6488956724207994e-10),
    (4.1881019230164257e-09, 2.6584442709128037e-09),
    (4.1881019230164257e-09, 2.6584442709128037e-09),
    (4.785997035523019e-10, 5.4658811611261019e-10),
    (2.3453403094378602e-10, 3.6861994612257097e-10),
    (2.4593996237509771e-11, 4.8476202410159137e-11),
    (5.5105845219553973e-12, 1.5704810750852211e-11),
    (0.0, 0.0),
    (0.0, 0.0),
    (0.00068467760546934444, 1.0325969514515219),
    (62562649.780753508, 55103621.350412525),
    (116.5661375110401, 59.167298136302996),
    (74.74154428959298, 77.031649433296863),
    (1.4721868733610983, 0.84936052612990376),
    (39.216541025182053, 72.652684367026453),
    (668.56747567372315, 161.33217405345172),
    (3.1433185810598321, 1.8130815487657852),
    (685.53582517464145, 161.03467147657213),
    (0.12600577619387132, 0.10594551848906057),
    (0.10396689611129795, 0.11481949368455914),
    (0.067334475704582633, 0.05216253601184364),
    (0.049110871394807694, 0.05690586560455102),
    (0.04108899017965896, 0.025684870700234529),
    (0.025891874200817139, 0.027322043542729445),
]
'''


gen_singletons = {v:i for i,v in enumerate(_gen_singletons)}

def set_gen_variables(l=_gen_singletons):
    global gen_default_variables, gen_default_mus, gen_default_sigmas
    gen_default_variables = l[:]
    for bad in ['eventNumber', 'nprongs', 'partonm', 'partonpt']:
        if bad in gen_default_variables:
            gen_default_variables.remove(bad)

    # gen_default_mus = [_gen_props[gen_singletons[x]][0] for x in gen_default_variables]
    # gen_default_sigmas = [_gen_props[gen_singletons[x]][1] for x in gen_default_variables]
    gen_default_mus = [_gen_props[x][0] for x in gen_default_variables]
    gen_default_sigmas = [_gen_props[x][1] for x in gen_default_variables]

set_gen_variables()
